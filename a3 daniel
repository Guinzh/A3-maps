<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
  <title>Google Maps Search Example</title>
  <style>
    /* Estilos para o mapa */
    #map {
      height: 500px;
      width: 100%;
    }
  </style>
  <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBh5rPoNs9jPOWWqHbrYUjR5vcVqHsjROE&libraries=places&callback=initMap"></script>
</head>
<body>
  <div id="map"></div>
  <br>
  <form id="search-form" class="form-inline my-2 my-lg-0" style="display: flex;">
    <input id="location-input" class="form-control mr-sm-2" type="search" placeholder="Search" aria-label="Search">
    <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>
  </form>
  
  <div class="form-group mt-3">
    <label for="activity-input">O que você fez neste local?</label>
    <textarea id="activity-input" class="form-control" rows="3" placeholder="Escreva aqui..."></textarea>
  </div>

  <script>
    let map;
    let geocoder;
    let marker;

    // Função que inicializa o mapa
    function initMap() {
      const location = { lat: -23.55052, lng: -46.633308 }; // São Paulo como exemplo

      map = new google.maps.Map(document.getElementById('map'), {
        center: location,
        zoom: 13
      });

      geocoder = new google.maps.Geocoder();

      // Cria o marcador
      marker = new google.maps.Marker({
        map: map,
        position: location,
        icon: {
          url: "http://maps.google.com/mapfiles/ms/icons/red-dot.png", // URL do ícone do marcador
          scaledSize: new google.maps.Size(30, 30) // Tamanho inicial do marcador
        }
      });

      // Listener para o evento de zoom
      google.maps.event.addListener(map, 'zoom_changed', function() {
        updateMarkerSize();
      });

      // Listener para o clique no marcador
      marker.addListener('click', function() {
        const activityInput = document.getElementById('activity-input');
        activityInput.value = ''; 
        // Limpa a caixa de texto ao clicar no marcador
      });
    }

    // Função para atualizar o tamanho do marcador com base no nível de zoom
    function updateMarkerSize() {
      const zoomLevel = map.getZoom();
      const size = Math.max(20, 30 - (zoomLevel - 13));
       // Tamanho do marcador baseado no zoom
      marker.setIcon({
        url: "http://maps.google.com/mapfiles/ms/icons/red-dot.png",
        scaledSize: new google.maps.Size(size, size)
      });
    }

    // Função para buscar e atualizar o mapa com a nova localização
    function geocodeAddress(location) {
      geocoder.geocode({ address: location }, function(results, status) {
        if (status === 'OK') {
          // Atualiza o mapa para a nova localização
          map.setCenter(results[0].geometry.location);
          marker.setPosition(results[0].geometry.location); 
          // Move o marcador para a nova localização
          updateMarkerSize(); 
          // Atualiza o tamanho do marcador
        } else {
          alert('Geocode was not successful for the following reason: ' + status);
        }
      });
    }

    // Listener para o envio do formulário de pesquisa
    document.getElementById('search-form').addEventListener('submit', function(event) {
      event.preventDefault();
      const location = document.getElementById('location-input').value;
      geocodeAddress(location);
    });
  </script>
</body>
</html>
